#lang staapl/pic18 \ -*- forth -*-

\ PIC DIP40 MINI KIT - PIC Developmenâ€‹t Board kit for DIP40 PIC with 18F4550 + 4Mhz XTAL
\ http://100mhz.com/pic-dspic-pic32-pic24/development-boards/pic-18f4550-usb-demo-development-board-pic18f4550-microcontroller-1074.html

\ RAM map
\ range   bytes
\ ----------------------------------------------------
\ 000-07F   128  named variables
\ 080-099    32  data stack
\ 0A0-0FF    96  retain stack
\ 100-1DF   224  *unused*
\ 1C0-1DF    32  midi note buffer
\ 1E0-1FF    32  uart receive buffer
\ 200-2FF   256  *unused*
\ 100-2FF   256  *unused*
\ 400-419    32  BD (USB buffer descriptors EP0-EP3)  (1)
\ 420-42F    16  BD reserved EP4-EP5
\ 440-4EF   192  *unused*
\ 4F0-4F7     8  EP read/write pointers
\ 4F8-4FF     8  *unused*
\ 500-6FF   512  EP buffers (EP0-EP3: 4 x 2 x 64 bytes)
\ 700-7FF   256  EP buffers (EP4-EP5) reserved (2)

\ (1) Some of these are not used in practice so could be repurposed.
\ (2) For now, 6 total endpoints are reserved.

provide-all

\ config
#x300000 org-begin

\ no extended instruction set, no wdt, no code protect, 

#x20 , #x0E , #x3A , #x1E ,   \ 4MHz XT drives PLL directly
#x00 , #x81 , #x85 , #x00 ,   \ extended instruction set disabled
#x0F , #xC0 , #x0F , #xE0 ,
#x0F , #x40 , 

org-end

staapl pic18/boot   \ chip init code

load p18f4550.f          \ chip macros
load monitor-usbserial.f \ boot block + interactive monitor over USB ACM serial port

load usb.f                     \ USB library
require-file synth-usb.rkt     \ scheme file with descriptor tables       
: device-descriptor        'scheme device  usb-descriptor
: configuration-descriptor 'scheme configs usb-descriptors
: string-descriptor        'scheme strings usb-descriptors

staapl pic18/string
staapl pic18/afregs
staapl pic18/vector

\ copied from synth.f - we don't have the panel on this board and
\ setup is a little different.
    
staapl pic18/afregs
staapl pic18/compose-macro
staapl pic18/cond
staapl pic18/double-hacks
staapl pic18/double-math
staapl pic18/execute
staapl pic18/prom \ FIXME: sti
staapl pic18/route
staapl pic18/serial
staapl pic18/_table
staapl pic18/task
staapl pic18/vector    

    
load synth/core.f       \ core timer ISRs
load synth/control.f    \ patch / period control
\ load synth/soundgen.f   \ highlevel sounds
load synth/notes.f      \ note memory
load synth/midi-nrpn.f  \ direct parameter access
load synth/midi.f       \ midi control
load synth/midi-hw.f    \ midi serial hw support
load synth/midi-usb.f   \ midi usb support
load synth/midi-voice.f \ midi voice control    
load synth/mainloop.f
    
\ load debug.f

macro
: live-module ` staapl/pic18/live ;  
: fosc 48000000 ;
: init-tcons init-tcons-scale4 ;    
    
\ USB endpoint constants: see synth-usb.rkt
\ control:0, ACM data:1, ACM control:2, MIDI:3 
: total-EP   4 ; 
: monitor-EP 1 ;
: midi-EP    3 ;

\ handle UART input in kernel low-pri isr.  STATUS is already saved,
\ normal return or macro.
: service-lo service-midi ;
: poll-midi
    poll-hw-midi
    poll-usb-midi ;    

: pause 0 begin 0 begin 1+ c? until drop 1+ c? until drop ;
: hello 0 LATB ! pause #xF LATB ! ;
  
\ B:2/3 : audio output
: init-board     \ FIXME
    #xF0 TRISB ! \ low nibble is LED1-LED4
    0 TRISA !    \ FIXME: check these
    #x80 TRISC ! \ RC7 is midi in
    0 TRISD !
    0 TRISE !
    hello       \ remove if doesn't fit in bootloader
    ;
: application mainloop ;    
    
    
forth

\ Install timer interrupt handler.  
' isr init-isr-hi


    

  

